{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) {\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var it,\n    normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar entities = require('entities');\nvar defaults = {\n  fg: '#FFF',\n  bg: '#000',\n  newline: false,\n  escapeXML: false,\n  stream: false,\n  colors: getDefaultColors()\n};\nfunction getDefaultColors() {\n  var colors = {\n    0: '#000',\n    1: '#A00',\n    2: '#0A0',\n    3: '#A50',\n    4: '#00A',\n    5: '#A0A',\n    6: '#0AA',\n    7: '#AAA',\n    8: '#555',\n    9: '#F55',\n    10: '#5F5',\n    11: '#FF5',\n    12: '#55F',\n    13: '#F5F',\n    14: '#5FF',\n    15: '#FFF'\n  };\n  range(0, 5).forEach(function (red) {\n    range(0, 5).forEach(function (green) {\n      range(0, 5).forEach(function (blue) {\n        return setStyleColor(red, green, blue, colors);\n      });\n    });\n  });\n  range(0, 23).forEach(function (gray) {\n    var c = gray + 232;\n    var l = toHexString(gray * 10 + 8);\n    colors[c] = '#' + l + l + l;\n  });\n  return colors;\n}\n/**\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {object} colors\n */\n\nfunction setStyleColor(red, green, blue, colors) {\n  var c = 16 + red * 36 + green * 6 + blue;\n  var r = red > 0 ? red * 40 + 55 : 0;\n  var g = green > 0 ? green * 40 + 55 : 0;\n  var b = blue > 0 ? blue * 40 + 55 : 0;\n  colors[c] = toColorHexString([r, g, b]);\n}\n/**\n * Converts from a number like 15 to a hex string like 'F'\n * @param {number} num\n * @returns {string}\n */\n\nfunction toHexString(num) {\n  var str = num.toString(16);\n  while (str.length < 2) {\n    str = '0' + str;\n  }\n  return str;\n}\n/**\n * Converts from an array of numbers like [15, 15, 15] to a hex string like 'FFF'\n * @param {[red, green, blue]} ref\n * @returns {string}\n */\n\nfunction toColorHexString(ref) {\n  var results = [];\n  var _iterator = _createForOfIteratorHelper(ref),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var r = _step.value;\n      results.push(toHexString(r));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return '#' + results.join('');\n}\n/**\n * @param {Array} stack\n * @param {string} token\n * @param {*} data\n * @param {object} options\n */\n\nfunction generateOutput(stack, token, data, options) {\n  var result;\n  if (token === 'text') {\n    result = pushText(data, options);\n  } else if (token === 'display') {\n    result = handleDisplay(stack, data, options);\n  } else if (token === 'xterm256') {\n    result = pushForegroundColor(stack, options.colors[data]);\n  } else if (token === 'rgb') {\n    result = handleRgb(stack, data);\n  }\n  return result;\n}\n/**\n * @param {Array} stack\n * @param {string} data\n * @returns {*}\n */\n\nfunction handleRgb(stack, data) {\n  data = data.substring(2).slice(0, -1);\n  var operation = +data.substr(0, 2);\n  var color = data.substring(5).split(';');\n  var rgb = color.map(function (value) {\n    return ('0' + Number(value).toString(16)).substr(-2);\n  }).join('');\n  return pushStyle(stack, (operation === 38 ? 'color:#' : 'background-color:#') + rgb);\n}\n/**\n * @param {Array} stack\n * @param {number} code\n * @param {object} options\n * @returns {*}\n */\n\nfunction handleDisplay(stack, code, options) {\n  code = parseInt(code, 10);\n  var codeMap = {\n    '-1': function _() {\n      return '<br/>';\n    },\n    0: function _() {\n      return stack.length && resetStyles(stack);\n    },\n    1: function _() {\n      return pushTag(stack, 'b');\n    },\n    3: function _() {\n      return pushTag(stack, 'i');\n    },\n    4: function _() {\n      return pushTag(stack, 'u');\n    },\n    8: function _() {\n      return pushStyle(stack, 'display:none');\n    },\n    9: function _() {\n      return pushTag(stack, 'strike');\n    },\n    22: function _() {\n      return pushStyle(stack, 'font-weight:normal;text-decoration:none;font-style:normal');\n    },\n    23: function _() {\n      return closeTag(stack, 'i');\n    },\n    24: function _() {\n      return closeTag(stack, 'u');\n    },\n    39: function _() {\n      return pushForegroundColor(stack, options.fg);\n    },\n    49: function _() {\n      return pushBackgroundColor(stack, options.bg);\n    },\n    53: function _() {\n      return pushStyle(stack, 'text-decoration:overline');\n    }\n  };\n  var result;\n  if (codeMap[code]) {\n    result = codeMap[code]();\n  } else if (4 < code && code < 7) {\n    result = pushTag(stack, 'blink');\n  } else if (29 < code && code < 38) {\n    result = pushForegroundColor(stack, options.colors[code - 30]);\n  } else if (39 < code && code < 48) {\n    result = pushBackgroundColor(stack, options.colors[code - 40]);\n  } else if (89 < code && code < 98) {\n    result = pushForegroundColor(stack, options.colors[8 + (code - 90)]);\n  } else if (99 < code && code < 108) {\n    result = pushBackgroundColor(stack, options.colors[8 + (code - 100)]);\n  }\n  return result;\n}\n/**\n * Clear all the styles\n * @returns {string}\n */\n\nfunction resetStyles(stack) {\n  var stackClone = stack.slice(0);\n  stack.length = 0;\n  return stackClone.reverse().map(function (tag) {\n    return '</' + tag + '>';\n  }).join('');\n}\n/**\n * Creates an array of numbers ranging from low to high\n * @param {number} low\n * @param {number} high\n * @returns {Array}\n * @example range(3, 7); // creates [3, 4, 5, 6, 7]\n */\n\nfunction range(low, high) {\n  var results = [];\n  for (var j = low; j <= high; j++) {\n    results.push(j);\n  }\n  return results;\n}\n/**\n * Returns a new function that is true if value is NOT the same category\n * @param {string} category\n * @returns {function}\n */\n\nfunction notCategory(category) {\n  return function (e) {\n    return (category === null || e.category !== category) && category !== 'all';\n  };\n}\n/**\n * Converts a code into an ansi token type\n * @param {number} code\n * @returns {string}\n */\n\nfunction categoryForCode(code) {\n  code = parseInt(code, 10);\n  var result = null;\n  if (code === 0) {\n    result = 'all';\n  } else if (code === 1) {\n    result = 'bold';\n  } else if (2 < code && code < 5) {\n    result = 'underline';\n  } else if (4 < code && code < 7) {\n    result = 'blink';\n  } else if (code === 8) {\n    result = 'hide';\n  } else if (code === 9) {\n    result = 'strike';\n  } else if (29 < code && code < 38 || code === 39 || 89 < code && code < 98) {\n    result = 'foreground-color';\n  } else if (39 < code && code < 48 || code === 49 || 99 < code && code < 108) {\n    result = 'background-color';\n  }\n  return result;\n}\n/**\n * @param {string} text\n * @param {object} options\n * @returns {string}\n */\n\nfunction pushText(text, options) {\n  if (options.escapeXML) {\n    return entities.encodeXML(text);\n  }\n  return text;\n}\n/**\n * @param {Array} stack\n * @param {string} tag\n * @param {string} [style='']\n * @returns {string}\n */\n\nfunction pushTag(stack, tag, style) {\n  if (!style) {\n    style = '';\n  }\n  stack.push(tag);\n  return \"<\".concat(tag).concat(style ? \" style=\\\"\".concat(style, \"\\\"\") : '', \">\");\n}\n/**\n * @param {Array} stack\n * @param {string} style\n * @returns {string}\n */\n\nfunction pushStyle(stack, style) {\n  return pushTag(stack, 'span', style);\n}\nfunction pushForegroundColor(stack, color) {\n  return pushTag(stack, 'span', 'color:' + color);\n}\nfunction pushBackgroundColor(stack, color) {\n  return pushTag(stack, 'span', 'background-color:' + color);\n}\n/**\n * @param {Array} stack\n * @param {string} style\n * @returns {string}\n */\n\nfunction closeTag(stack, style) {\n  var last;\n  if (stack.slice(-1)[0] === style) {\n    last = stack.pop();\n  }\n  if (last) {\n    return '</' + style + '>';\n  }\n}\n/**\n * @param {string} text\n * @param {object} options\n * @param {function} callback\n * @returns {Array}\n */\n\nfunction tokenize(text, options, callback) {\n  var ansiMatch = false;\n  var ansiHandler = 3;\n  function remove() {\n    return '';\n  }\n  function removeXterm256(m, g1) {\n    callback('xterm256', g1);\n    return '';\n  }\n  function newline(m) {\n    if (options.newline) {\n      callback('display', -1);\n    } else {\n      callback('text', m);\n    }\n    return '';\n  }\n  function ansiMess(m, g1) {\n    ansiMatch = true;\n    if (g1.trim().length === 0) {\n      g1 = '0';\n    }\n    g1 = g1.trimRight(';').split(';');\n    var _iterator2 = _createForOfIteratorHelper(g1),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var g = _step2.value;\n        callback('display', g);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return '';\n  }\n  function realText(m) {\n    callback('text', m);\n    return '';\n  }\n  function rgb(m) {\n    callback('rgb', m);\n    return '';\n  }\n  /* eslint no-control-regex:0 */\n\n  var tokens = [{\n    pattern: /^\\x08+/,\n    sub: remove\n  }, {\n    pattern: /^\\x1b\\[[012]?K/,\n    sub: remove\n  }, {\n    pattern: /^\\x1b\\[\\(B/,\n    sub: remove\n  }, {\n    pattern: /^\\x1b\\[[34]8;2;\\d+;\\d+;\\d+m/,\n    sub: rgb\n  }, {\n    pattern: /^\\x1b\\[38;5;(\\d+)m/,\n    sub: removeXterm256\n  }, {\n    pattern: /^\\n/,\n    sub: newline\n  }, {\n    pattern: /^\\r+\\n/,\n    sub: newline\n  }, {\n    pattern: /^\\x1b\\[((?:\\d{1,3};?)+|)m/,\n    sub: ansiMess\n  }, {\n    // CSI n J\n    // ED - Erase in Display Clears part of the screen.\n    // If n is 0 (or missing), clear from cursor to end of screen.\n    // If n is 1, clear from cursor to beginning of the screen.\n    // If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).\n    // If n is 3, clear entire screen and delete all lines saved in the scrollback buffer\n    //   (this feature was added for xterm and is supported by other terminal applications).\n    pattern: /^\\x1b\\[\\d?J/,\n    sub: remove\n  }, {\n    // CSI n ; m f\n    // HVP - Horizontal Vertical Position Same as CUP\n    pattern: /^\\x1b\\[\\d{0,3};\\d{0,3}f/,\n    sub: remove\n  }, {\n    // catch-all for CSI sequences?\n    pattern: /^\\x1b\\[?[\\d;]{0,3}/,\n    sub: remove\n  }, {\n    /**\n     * extracts real text - not containing:\n     * - `\\x1b' - ESC - escape (Ascii 27)\n     * - '\\x08' - BS - backspace (Ascii 8)\n     * - `\\n` - Newline - linefeed (LF) (ascii 10)\n     * - `\\r` - Windows Carriage Return (CR)\n     */\n    pattern: /^(([^\\x1b\\x08\\r\\n])+)/,\n    sub: realText\n  }];\n  function process(handler, i) {\n    if (i > ansiHandler && ansiMatch) {\n      return;\n    }\n    ansiMatch = false;\n    text = text.replace(handler.pattern, handler.sub);\n  }\n  var results1 = [];\n  var _text = text,\n    length = _text.length;\n  outer: while (length > 0) {\n    for (var i = 0, o = 0, len = tokens.length; o < len; i = ++o) {\n      var handler = tokens[i];\n      process(handler, i);\n      if (text.length !== length) {\n        // We matched a token and removed it from the text. We need to\n        // start matching *all* tokens against the new text.\n        length = text.length;\n        continue outer;\n      }\n    }\n    if (text.length === length) {\n      break;\n    }\n    results1.push(0);\n    length = text.length;\n  }\n  return results1;\n}\n/**\n * If streaming, then the stack is \"sticky\"\n *\n * @param {Array} stickyStack\n * @param {string} token\n * @param {*} data\n * @returns {Array}\n */\n\nfunction updateStickyStack(stickyStack, token, data) {\n  if (token !== 'text') {\n    stickyStack = stickyStack.filter(notCategory(categoryForCode(data)));\n    stickyStack.push({\n      token: token,\n      data: data,\n      category: categoryForCode(data)\n    });\n  }\n  return stickyStack;\n}\nvar Filter = /*#__PURE__*/function () {\n  /**\n   * @param {object} options\n   * @param {string=} options.fg The default foreground color used when reset color codes are encountered.\n   * @param {string=} options.bg The default background color used when reset color codes are encountered.\n   * @param {boolean=} options.newline Convert newline characters to `<br/>`.\n   * @param {boolean=} options.escapeXML Generate HTML/XML entities.\n   * @param {boolean=} options.stream Save style state across invocations of `toHtml()`.\n   * @param {(string[] | {[code: number]: string})=} options.colors Can override specific colors or the entire ANSI palette.\n   */\n  function Filter(options) {\n    _classCallCheck(this, Filter);\n    options = options || {};\n    if (options.colors) {\n      options.colors = Object.assign({}, defaults.colors, options.colors);\n    }\n    this.options = Object.assign({}, defaults, options);\n    this.stack = [];\n    this.stickyStack = [];\n  }\n  /**\n   * @param {string | string[]} input\n   * @returns {string}\n   */\n\n  _createClass(Filter, [{\n    key: \"toHtml\",\n    value: function toHtml(input) {\n      var _this = this;\n      input = typeof input === 'string' ? [input] : input;\n      var stack = this.stack,\n        options = this.options;\n      var buf = [];\n      this.stickyStack.forEach(function (element) {\n        var output = generateOutput(stack, element.token, element.data, options);\n        if (output) {\n          buf.push(output);\n        }\n      });\n      tokenize(input.join(''), options, function (token, data) {\n        var output = generateOutput(stack, token, data, options);\n        if (output) {\n          buf.push(output);\n        }\n        if (options.stream) {\n          _this.stickyStack = updateStickyStack(_this.stickyStack, token, data);\n        }\n      });\n      if (stack.length) {\n        buf.push(resetStyles(stack));\n      }\n      return buf.join('');\n    }\n  }]);\n  return Filter;\n}();\nmodule.exports = Filter;","map":{"version":3,"mappings":"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","names":["entities","require","defaults","fg","bg","newline","escapeXML","stream","colors","getDefaultColors","range","forEach","setStyleColor","red","green","blue","gray","c","l","toHexString","r","g","b","toColorHexString","num","str","toString","length","ref","results","_step","push","_iterator","join","generateOutput","stack","token","data","options","result","pushText","handleDisplay","pushForegroundColor","handleRgb","substring","slice","operation","substr","color","split","rgb","map","value","Number","pushStyle","code","parseInt","codeMap","resetStyles","pushTag","closeTag","pushBackgroundColor","stackClone","reverse","tag","low","high","j","notCategory","category","e","categoryForCode","text","encodeXML","style","last","pop","tokenize","callback","ansiMatch","ansiHandler","remove","removeXterm256","m","g1","ansiMess","trim","trimRight","_step2","_iterator2","realText","tokens","pattern","sub","process","handler","i","replace","results1","outer","o","len","updateStickyStack","stickyStack","filter","Filter","_classCallCheck","Object","assign","input","buf","output","element","_this","module","exports"],"sources":["/Users/jose/ga/sandbox/labs/Component-Library/node_modules/ansi-to-html/src/ansi_to_html.js"],"sourcesContent":["'use strict';\nconst entities = require('entities');\nconst defaults = {\n    fg: '#FFF',\n    bg: '#000',\n    newline: false,\n    escapeXML: false,\n    stream: false,\n    colors: getDefaultColors()\n};\n\nfunction getDefaultColors() {\n    const colors = {\n        0: '#000',\n        1: '#A00',\n        2: '#0A0',\n        3: '#A50',\n        4: '#00A',\n        5: '#A0A',\n        6: '#0AA',\n        7: '#AAA',\n        8: '#555',\n        9: '#F55',\n        10: '#5F5',\n        11: '#FF5',\n        12: '#55F',\n        13: '#F5F',\n        14: '#5FF',\n        15: '#FFF'\n    };\n\n    range(0, 5).forEach(red => {\n        range(0, 5).forEach(green => {\n            range(0, 5).forEach(blue => setStyleColor(red, green, blue, colors));\n        });\n    });\n\n    range(0, 23).forEach(function (gray) {\n        const c = gray + 232;\n        const l = toHexString(gray * 10 + 8);\n\n        colors[c] = '#' + l + l + l;\n    });\n\n    return colors;\n}\n\n/**\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {object} colors\n */\nfunction setStyleColor(red, green, blue, colors) {\n    const c = 16 + (red * 36) + (green * 6) + blue;\n    const r = red > 0 ? red * 40 + 55 : 0;\n    const g = green > 0 ? green * 40 + 55 : 0;\n    const b = blue > 0 ? blue * 40 + 55 : 0;\n\n    colors[c] = toColorHexString([r, g, b]);\n}\n\n/**\n * Converts from a number like 15 to a hex string like 'F'\n * @param {number} num\n * @returns {string}\n */\nfunction toHexString(num) {\n    let str = num.toString(16);\n\n    while (str.length < 2) {\n        str = '0' + str;\n    }\n\n    return str;\n}\n\n/**\n * Converts from an array of numbers like [15, 15, 15] to a hex string like 'FFF'\n * @param {[red, green, blue]} ref\n * @returns {string}\n */\nfunction toColorHexString(ref) {\n    const results = [];\n\n    for (const r of ref) {\n        results.push(toHexString(r));\n    }\n\n    return '#' + results.join('');\n}\n\n/**\n * @param {Array} stack\n * @param {string} token\n * @param {*} data\n * @param {object} options\n */\nfunction generateOutput(stack, token, data, options) {\n    let result;\n\n    if (token === 'text') {\n        result = pushText(data, options);\n    } else if (token === 'display') {\n        result = handleDisplay(stack, data, options);\n    } else if (token === 'xterm256') {\n        result = pushForegroundColor(stack, options.colors[data]);\n    } else if (token === 'rgb') {\n        result = handleRgb(stack, data);\n    }\n\n    return result;\n}\n\n/**\n * @param {Array} stack\n * @param {string} data\n * @returns {*}\n */\nfunction handleRgb(stack, data) {\n    data = data.substring(2).slice(0, -1);\n    const operation = +data.substr(0,2);\n\n    const color = data.substring(5).split(';');\n    const rgb = color.map(function(value) {\n        return ('0' + Number(value).toString(16)).substr(-2);\n    }).join('');\n\n    return pushStyle(stack, (operation === 38 ? 'color:#' : 'background-color:#') + rgb);\n}\n\n/**\n * @param {Array} stack\n * @param {number} code\n * @param {object} options\n * @returns {*}\n */\nfunction handleDisplay(stack, code, options) {\n    code = parseInt(code, 10);\n\n    const codeMap = {\n        '-1': () => '<br/>',\n        0: () => stack.length && resetStyles(stack),\n        1: () => pushTag(stack, 'b'),\n        3: () => pushTag(stack, 'i'),\n        4: () => pushTag(stack, 'u'),\n        8: () => pushStyle(stack, 'display:none'),\n        9: () => pushTag(stack, 'strike'),\n        22: () => pushStyle(stack, 'font-weight:normal;text-decoration:none;font-style:normal'),\n        23: () => closeTag(stack, 'i'),\n        24: () => closeTag(stack, 'u'),\n        39: () => pushForegroundColor(stack, options.fg),\n        49: () => pushBackgroundColor(stack, options.bg),\n        53: () => pushStyle(stack, 'text-decoration:overline')\n    };\n\n    let result;\n    if (codeMap[code]) {\n        result = codeMap[code]();\n    } else if (4 < code && code < 7) {\n        result = pushTag(stack, 'blink');\n    } else if (29 < code && code < 38) {\n        result = pushForegroundColor(stack, options.colors[code - 30]);\n    } else if ((39 < code && code < 48)) {\n        result = pushBackgroundColor(stack, options.colors[code - 40]);\n    } else if ((89 < code && code < 98)) {\n        result = pushForegroundColor(stack, options.colors[8 + (code - 90)]);\n    } else if ((99 < code && code < 108)) {\n        result = pushBackgroundColor(stack, options.colors[8 + (code - 100)]);\n    }\n\n    return result;\n}\n\n/**\n * Clear all the styles\n * @returns {string}\n */\nfunction resetStyles(stack) {\n    const stackClone = stack.slice(0);\n\n    stack.length = 0;\n\n    return stackClone.reverse().map(function (tag) {\n        return '</' + tag + '>';\n    }).join('');\n}\n\n/**\n * Creates an array of numbers ranging from low to high\n * @param {number} low\n * @param {number} high\n * @returns {Array}\n * @example range(3, 7); // creates [3, 4, 5, 6, 7]\n */\nfunction range(low, high) {\n    const results = [];\n\n    for (let j = low; j <= high; j++) {\n        results.push(j);\n    }\n\n    return results;\n}\n\n\n\n/**\n * Returns a new function that is true if value is NOT the same category\n * @param {string} category\n * @returns {function}\n */\nfunction notCategory(category) {\n    return function (e) {\n        return (category === null || e.category !== category) && category !== 'all';\n    };\n}\n\n/**\n * Converts a code into an ansi token type\n * @param {number} code\n * @returns {string}\n */\nfunction categoryForCode(code) {\n    code = parseInt(code, 10);\n    let result = null;\n\n    if (code === 0) {\n        result = 'all';\n    } else if (code === 1) {\n        result = 'bold';\n    } else if ((2 < code && code < 5)) {\n        result = 'underline';\n    } else if ((4 < code && code < 7)) {\n        result = 'blink';\n    } else if (code === 8) {\n        result = 'hide';\n    } else if (code === 9) {\n        result = 'strike';\n    } else if ((29 < code && code < 38) || code === 39 || (89 < code && code < 98)) {\n        result = 'foreground-color';\n    } else if ((39 < code && code < 48) || code === 49 || (99 < code && code < 108)) {\n        result = 'background-color';\n    }\n\n    return result;\n}\n\n/**\n * @param {string} text\n * @param {object} options\n * @returns {string}\n */\nfunction pushText(text, options) {\n    if (options.escapeXML) {\n        return entities.encodeXML(text);\n    }\n\n    return text;\n}\n\n/**\n * @param {Array} stack\n * @param {string} tag\n * @param {string} [style='']\n * @returns {string}\n */\nfunction pushTag(stack, tag, style) {\n    if (!style) {\n        style = '';\n    }\n\n    stack.push(tag);\n\n    return `<${tag}${style ? ` style=\"${style}\"` : ''}>`;\n}\n\n/**\n * @param {Array} stack\n * @param {string} style\n * @returns {string}\n */\nfunction pushStyle (stack, style) {\n    return pushTag(stack, 'span', style);\n}\n\nfunction pushForegroundColor(stack, color) {\n    return pushTag(stack, 'span', 'color:' + color);\n}\n\nfunction pushBackgroundColor(stack, color) {\n    return pushTag(stack, 'span', 'background-color:' + color);\n}\n\n/**\n * @param {Array} stack\n * @param {string} style\n * @returns {string}\n */\nfunction closeTag(stack, style) {\n    let last;\n\n    if (stack.slice(-1)[0] === style) {\n        last = stack.pop();\n    }\n\n    if (last) {\n        return '</' + style + '>';\n    }\n}\n\n/**\n * @param {string} text\n * @param {object} options\n * @param {function} callback\n * @returns {Array}\n */\nfunction tokenize(text, options, callback) {\n    let ansiMatch = false;\n    const ansiHandler = 3;\n\n    function remove() {\n        return '';\n    }\n\n    function removeXterm256(m, g1) {\n        callback('xterm256', g1);\n        return '';\n    }\n\n    function newline(m) {\n        if (options.newline) {\n            callback('display', -1);\n        } else {\n            callback('text', m);\n        }\n\n        return '';\n    }\n\n    function ansiMess(m, g1) {\n        ansiMatch = true;\n        if (g1.trim().length === 0) {\n            g1 = '0';\n        }\n\n        g1 = g1.trimRight(';').split(';');\n\n        for (const g of g1) {\n            callback('display', g);\n        }\n\n        return '';\n    }\n\n    function realText(m) {\n        callback('text', m);\n\n        return '';\n    }\n\n    function rgb(m) {\n        callback('rgb', m);\n\n        return '';\n    }\n\n    /* eslint no-control-regex:0 */\n    const tokens = [{\n        pattern: /^\\x08+/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[[012]?K/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[\\(B/,\n        sub: remove\n    }, {\n        pattern: /^\\x1b\\[[34]8;2;\\d+;\\d+;\\d+m/,\n        sub: rgb\n    }, {\n        pattern: /^\\x1b\\[38;5;(\\d+)m/,\n        sub: removeXterm256\n    }, {\n        pattern: /^\\n/,\n        sub: newline\n    },{\n        pattern: /^\\r+\\n/,\n        sub: newline\n    }, {\n        pattern: /^\\x1b\\[((?:\\d{1,3};?)+|)m/,\n        sub: ansiMess\n    }, {\n        // CSI n J\n        // ED - Erase in Display Clears part of the screen.\n        // If n is 0 (or missing), clear from cursor to end of screen.\n        // If n is 1, clear from cursor to beginning of the screen.\n        // If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS).\n        // If n is 3, clear entire screen and delete all lines saved in the scrollback buffer\n        //   (this feature was added for xterm and is supported by other terminal applications).\n        pattern: /^\\x1b\\[\\d?J/,\n        sub: remove\n    }, {\n        // CSI n ; m f\n        // HVP - Horizontal Vertical Position Same as CUP\n        pattern: /^\\x1b\\[\\d{0,3};\\d{0,3}f/,\n        sub: remove\n    }, {\n        // catch-all for CSI sequences?\n        pattern: /^\\x1b\\[?[\\d;]{0,3}/,\n        sub: remove\n    }, {\n        /**\n         * extracts real text - not containing:\n         * - `\\x1b' - ESC - escape (Ascii 27)\n         * - '\\x08' - BS - backspace (Ascii 8)\n         * - `\\n` - Newline - linefeed (LF) (ascii 10)\n         * - `\\r` - Windows Carriage Return (CR)\n         */\n        pattern: /^(([^\\x1b\\x08\\r\\n])+)/,\n        sub: realText\n    }];\n\n    function process(handler, i) {\n        if (i > ansiHandler && ansiMatch) {\n            return;\n        }\n\n        ansiMatch = false;\n\n        text = text.replace(handler.pattern, handler.sub);\n    }\n\n    const results1 = [];\n    let {length} = text;\n\n    outer:\n    while (length > 0) {\n        for (let i = 0, o = 0, len = tokens.length; o < len; i = ++o) {\n            const handler = tokens[i];\n            process(handler, i);\n\n            if (text.length !== length) {\n                // We matched a token and removed it from the text. We need to\n                // start matching *all* tokens against the new text.\n                length = text.length;\n                continue outer;\n            }\n        }\n\n        if (text.length === length) {\n            break;\n        }\n        results1.push(0);\n\n        length = text.length;\n    }\n\n    return results1;\n}\n\n/**\n * If streaming, then the stack is \"sticky\"\n *\n * @param {Array} stickyStack\n * @param {string} token\n * @param {*} data\n * @returns {Array}\n */\nfunction updateStickyStack(stickyStack, token, data) {\n    if (token !== 'text') {\n        stickyStack = stickyStack.filter(notCategory(categoryForCode(data)));\n        stickyStack.push({token, data, category: categoryForCode(data)});\n    }\n\n    return stickyStack;\n}\n\nclass Filter {\n    /**\n     * @param {object} options\n     * @param {string=} options.fg The default foreground color used when reset color codes are encountered.\n     * @param {string=} options.bg The default background color used when reset color codes are encountered.\n     * @param {boolean=} options.newline Convert newline characters to `<br/>`.\n     * @param {boolean=} options.escapeXML Generate HTML/XML entities.\n     * @param {boolean=} options.stream Save style state across invocations of `toHtml()`.\n     * @param {(string[] | {[code: number]: string})=} options.colors Can override specific colors or the entire ANSI palette.\n     */\n    constructor (options) {\n        options = options || {};\n\n        if (options.colors) {\n            options.colors = Object.assign({}, defaults.colors, options.colors);\n        }\n\n        this.options = Object.assign({}, defaults, options);\n        this.stack = [];\n        this.stickyStack = [];\n    }\n    /**\n     * @param {string | string[]} input\n     * @returns {string}\n     */\n    toHtml (input) {\n        input = typeof input === 'string' ? [input] : input;\n        const {stack, options} = this;\n        const buf = [];\n\n        this.stickyStack.forEach(element => {\n            const output = generateOutput(stack, element.token, element.data, options);\n\n            if (output) {\n                buf.push(output);\n            }\n        });\n\n        tokenize(input.join(''), options, (token, data) => {\n            const output = generateOutput(stack, token, data, options);\n\n            if (output) {\n                buf.push(output);\n            }\n\n            if (options.stream) {\n                this.stickyStack = updateStickyStack(this.stickyStack, token, data);\n            }\n        });\n\n        if (stack.length) {\n            buf.push(resetStyles(stack));\n        }\n\n        return buf.join('');\n    }\n}\n\nmodule.exports = Filter;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}